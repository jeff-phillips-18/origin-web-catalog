{"version":3,"sources":["webpack:///./src/components/services-view/services-view.component.ts","webpack:///./src/components/services-view/services-view.component.ts?2598","webpack:///./src/components/order-service/order-service.html","webpack:///./src/components/services-view/services-view.html","webpack:///./src/components/order-service/order-service.controller.ts","webpack:///./src/components/order-service/order-service.controller.ts?f07d","webpack:///./src/components/services-view/services-view.controller.ts","webpack:///./src/components/services-view/services-view.controller.ts?0177","webpack:///./src/index.ts","webpack:///./src/index.ts?fe78","webpack:///./src/styles/main.less","webpack:///./src/components/order-service/order-service.component.ts","webpack:///./src/components/order-service/order-service.component.ts?06f9"],"names":[],"mappings":";;;;;;AAAA;AACA,QAAQ,aAAa;ACDrB;AAEa,uBAA0C;IACrD,UAAU;QACR,UAAU;QACV,YAAY;;IAEd,YAAY;IACZ,UAAU,oBAAQ;;;;;;;;;ACRpB,0RAA0R,mBAAmB,+CAA+C,mBAAmB,mFAAmF,uBAAuB,uVAAuV,8BAA8B,4KAA4K,gCAAgC,0DAA0D,+DAA+D,4DAA4D,QAAQ,iGAAiG,YAAY,gqB;;;;;;;ACAp0C,keAAke,gDAAgD,+JAA+J,sDAAsD,+EAA+E,gBAAgB,mBAAmB,qDAAqD,kHAAkH,mDAAmD,6OAA6O,4DAA4D,8KAA8K,kBAAkB,oDAAoD,mBAAmB,oNAAoN,WAAW,8CAA8C,WAAW,uD;;;;;;;;ACA33D;AACA,QAAQ,aAAa;ACDrB;AAEA;IAQE,gCAAY,iBAAsB,QAAW;QAJtC,YAAY;QAKjB,KAAK,cAAc;QACnB,KAAK,SAAS;;IAGT,2CAAP;QACE,KAAK,KAAK,cAAc,KAAK,KAAK,QAAQ;QAC1C,KAAK,KAAK,cAAc,KAAK,KAAK,QAAQ;QAE1C,IAAI,UAAU,KAAK,YAAY,kBAAkB,KAAK,KAAK,QAAQ;QACnE,KAAK,KAAK,WAAW,QAAQ;QAC7B,KAAK,KAAK,kBAAkB,QAAQ,SAAS;QAC7C,KAAK,KAAK,YAAY,QAAQ;QAC9B,KAAK,KAAK,cAAc,QAAQ;;QAIhC,KAAK,KAAK,QAAQ,CAAE,EAAC,IAAI,GAAG,UAAU;YAClB,EAAC,IAAI;YACL,EAAC,IAAI;;QAEzB,KAAK,KAAK,cAAc,KAAK,KAAK,MAAM;QAExC,KAAK,KAAK,cAAc;;IAGnB,4CAAP;QACE,OAAO,KAAK,KAAK;;IAGZ,6CAAP,UAAiB,MAAS;QACxB,IAAI,KAAK,SAAS;YAChB,KAAK,SAAS;;;IAIX,4CAAP,UAAgB,MAAS;QACvB,KAAK,KAAK,MAAM,QAAQ,UAAC,MAAI,EAAK,YAAK,WAAW;QAClD,KAAK,KAAK,YAAY,UAAU;QAChC,KAAK,KAAK,cAAc;QACxB,KAAK,KAAK,YAAY,WAAW;;IAG5B,oDAAP,UAAyB,wBAA8B;QACrD,KAAK,KAAK,yBAAyB;QACnC,KAAK,SAAS,KAAK,KAAK,MAAM;;IAGzB,gDAAP;QACE,KAAK,SAAS,KAAK,KAAK,MAAM;;IAGzB,gDAAP;QACE,IAAI,UAAU,SAAS,cAAc;QACrC,IAAI,SAAS,SAAS,cAAc;QACpC,QAAQ,QAAS,SAAU,YAAY;QACvC,QAAQ,QAAS,QAAS,YAAY;;IAGjC,8CAAP,UAAkB,cAAsC;;;IAIjD,4CAAP;;;IAIO,+CAAP;QACE,KAAK,OAAO,MAAM;;IAEtB;;AA5ES,iCAAU,CAAC,mBAAmB;AAF1B;;;;;;;;;ACFb;AACA,QAAQ,aAAa;ACCrB;IAQE,gCAAY,SAAc,QAAW;QAL9B,YAAY;QAMjB,KAAK,iBAAiB;YACpB,aAAa;YACb,eAAe;YACf,SAAS,KAAK;;QAEhB,KAAK,UAAU;QACf,KAAK,SAAS;;IAGT,2CAAP;QAAA;QACE,KAAK,KAAK,eAAe,KAAK,KAAK,SAAS,IAAI,aAAC,EAAI,cAAO,OAAO,IAAI,GAAG,EAAC,MAAM;QACjF,KAAK,KAAK,gBAAgB;QAC1B,KAAK,KAAK,mBAAmB;QAC7B,KAAK,KAAK,mBAAmB,KAAK,KAAK;QACvC,KAAK,KAAK,aAAa,KAAK,KAAK;QACjC,KAAK,KAAK,gBAAgB,KAAK,iBAAiB;QAChD,KAAK,KAAK,uBAAuB;QAEjC,KAAK,OAAO,IAAI,eAAe;YAC7B,MAAK,KAAK;;;IAIP,oDAAP,UAAwB,UAAkB,aAAqB,qBAA4B;QACzF,IAAI,aAAa,SAAS,gBAAgB,OAAO;YAC/C,KAAK,KAAK,mBAAmB,KAAK,KAAK;;aAClC,IAAI,aAAa,SAAS,gBAAgB,OAAO;YACpD,KAAK,KAAK,mBAAmB,KAAK,QAAQ,UAAU,KAAK,KAAK,cAAc,EAAC,UAAU,YAAW;;aAC/F,IAAI,aAAa,SAAS,gBAAgB,OAAO;YACpD,KAAK,KAAK,mBAAmB,KAAK,QAAQ,UAAU,KAAK,KAAK,cAAc,EAAC,aAAa,eAAc;;aACrG;YACH,KAAK,KAAK,mBAAmB,KAAK,QAAQ,UAAU,KAAK,KAAK,cAAc,EAAC,UAAU,UAAU,aAAa,eAAc;;QAEhI,IAAI,qBAAqB;YACvB,KAAK,KAAK,gBAAgB,KAAK,iBAAiB;;QAElD,KAAK,KAAK,gBAAgB;QAC1B,KAAK,KAAK,mBAAmB,CAAC,gBAAgB,aAAa,cAAc;;IAGpE,oDAAP,UAAwB,UAAgB;QACtC,IAAI,UAAU;QACd,KAAK,KAAK,WAAW,IAAI,uBAAW;YAClC,IAAI,aAAa,SAAS,aAAa,YAAY,IAAI;gBACrD,UAAU,QAAQ,OAAO,YAAY;;;QAGzC,OAAO;;IACR;IAEM,+CAAP,UAAmB,MAAW,GAAM;QAClC,KAAK,KAAK,iBAAiB;QAC3B,KAAK,KAAK;;IACX;IAEM,qDAAP;QACE,KAAK,KAAK,uBAAuB;;IAClC;IAEM,sDAAP;QACE,KAAK,KAAK,uBAAuB;;IAClC;IAEM,8CAAP,UAAkB,cAAsC;;;IAIjD,4CAAP;;;IAGF;;AA9ES,iCAAU,CAAC,WAAW;AADlB;;;;;;;;;ACFb;AACA,QAAQ,aAAa;ACDrB;AACA;AACA;AACA;AAEa,qBAAqB;AAElC;KACK,OAAO,oBAAY,CAAC,cAAc,aAAa;KAC/C,UAAU,gBAAgB;KAC1B,UAAU,gBAAgB;;;;;;;;ACV/B,yC;;;;;;;;ACAA;AACA,QAAQ,aAAa;ACDrB;AAEa,uBAA0C;IACrD,UAAU;QACR,SAAS;;IAEX,YAAY;IACZ,UAAU,oBAAQ","file":"origin-web-catalogs.js","sourcesContent":["\"use strict\";\nexports.__esModule = true;\nvar services_view_controller_1 = require(\"./services-view.controller\");\nexports.servicesView = {\n    bindings: {\n        services: '<',\n        categories: '<'\n    },\n    controller: services_view_controller_1.ServicesViewController,\n    template: require('./services-view.html')\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/services-view/services-view.component.ts","import {ServicesViewController} from './services-view.controller';\n\nexport const servicesView: angular.IComponentOptions = {\n  bindings: {\n    services: '<',\n    categories: '<'\n  },\n  controller: ServicesViewController,\n  template: require('./services-view.html')\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/components/services-view/services-view.component.ts","module.exports = \"<span class=\\\"order-service\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-5 order-service-details\\\">\\n        <div class=\\\"order-service-deails-top\\\">\\n          <div class=\\\"service-title\\\">\\n            <span class=\\\"icon {{$ctrl.serviceIcon}}\\\"></span>\\n            <span class=\\\"name\\\">{{$ctrl.serviceName}}</span>\\n            <span class=\\\"version\\\" ng-if=\\\"$ctrl.currentStep.id != 1\\\">{{$ctrl.selectedVersion}}</span>\\n          </div>\\n          <span ng-if=\\\"$ctrl.currentStep.id === 1\\\">\\n            <div ng-include=\\\"'components/order-service/order-service-details.html'\\\"></div>\\n          </span>\\n           <span ng-if=\\\"$ctrl.currentStep.id === 2 || $ctrl.currentStep.id === 3\\\">\\n            <div class=\\\"long-description\\\">\\n              {{$ctrl.serviceLongDescription}}\\n            </div>\\n          </span>\\n        </div>\\n        <div class=\\\"order-service-deails-bottom\\\">\\n          <ul class=\\\"wizard-pf-steps-indicator\\\" ng-class=\\\"{'invisible': !$ctrl.wizardReady}\\\">\\n            <li class=\\\"wizard-pf-step\\\" ng-class=\\\"{active: step.selected, visited: step.visited && !step.selected}\\\" ng-repeat=\\\"step in $ctrl.getSteps()\\\" data-tabgroup=\\\"{{$index}}\\\">\\n              <a ng-click=\\\"$ctrl.stepClick(step)\\\"><span class=\\\"wizard-pf-step-number\\\">{{$index + 1}}</span></a>\\n            </li>\\n          </ul>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-7 order-service-config\\\">\\n        <div ng-if=\\\"$ctrl.currentStep.id === 1\\\" style=\\\"height: 100%\\\"\\n             ng-include=\\\"'components/order-service/order-service-pricing.html'\\\"></div>\\n        <div ng-if=\\\"$ctrl.currentStep.id === 2\\\" style=\\\"height: 100%\\\"\\n             ng-include=\\\"'components/order-service/order-service-configure.html'\\\"></div>\\n        <div ng-if=\\\"$ctrl.currentStep.id === 3\\\" style=\\\"height: 100%\\\"\\n             ng-include=\\\"'components/order-service/order-service-review.html'\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n</span>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/order-service/order-service.html\n// module id = 37\n// module chunks = 0","module.exports = \"<span class=\\\"services-view\\\">\\n\\n  <div ng-if=\\\"$ctrl.orderingPanelvisible\\\" class=\\\"service-ordering-container\\\">\\n    <a ng-click=\\\"$ctrl.closeOrderingPanel()\\\"><span class=\\\"ordering-panel-close pficon pficon-close\\\"></span></a>\\n    <order-service service=\\\"$ctrl.serviceToOrder\\\"></order-service>\\n  </div>\\n\\n  <div class=\\\"services-view-container\\\">\\n    <div class=\\\"title\\\">Services</div>\\n\\n    <div class=\\\"services-categories\\\">\\n      <a ng-class=\\\"{'current-filter': $ctrl.currentFilter === 'all'}\\\" ng-click=\\\"$ctrl.filterByCategory('all', 'all', true)\\\">All Services</a> |\\n      <span ng-repeat=\\\"category in $ctrl.categories\\\">\\n        <a ng-class=\\\"{'current-filter': $ctrl.currentFilter === category.id}\\\"\\n           ng-click=\\\"$ctrl.filterByCategory(category.id, 'all', true)\\\">{{category.label}}</a>\\n           {{$ctrl.categories.length !== ($index+1) ? ' | ' : ''}}\\n      </span>\\n    </div>\\n\\n    <div class=\\\"services-sub-categories\\\">\\n      <div class=\\\"card\\\" ng-class=\\\"{'current-filter': $ctrl.currentSubFilter === 'all'}\\\" ng-click=\\\"$ctrl.filterByCategory($ctrl.currentFilter, 'all', false)\\\">\\n        <div class=\\\"inner-content\\\">All</div>\\n      </div>\\n      <div ng-repeat=\\\"subCategory in $ctrl.subCategories\\\"\\n           class=\\\"card\\\" ng-class=\\\"{'current-filter': $ctrl.currentSubFilter === subCategory.id}\\\"\\n           ng-click=\\\"$ctrl.filterByCategory($ctrl.currentFilter, subCategory.id, false)\\\">\\n        <div class=\\\"inner-content\\\">\\n          <div class=\\\"sub-cat-icon {{subCategory.icon}}\\\"></div>\\n          <div class=\\\"sub-cat-label\\\">{{subCategory.label}}</div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div pf-card-view config=\\\"$ctrl.cardViewConfig\\\" items=\\\"$ctrl.filteredServices\\\">\\n      <div class=\\\"card-container\\\">\\n        <div class=\\\"card-icon {{item.icon}}\\\"></div>\\n        <div class=\\\"card-name\\\">{{item.name}}</div>\\n      </div>\\n    </div>\\n  </div>\\n</span>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/services-view/services-view.html\n// module id = 38\n// module chunks = 0","\"use strict\";\nexports.__esModule = true;\nvar angular = require(\"angular\");\nvar OrderServiceController = (function () {\n    function OrderServiceController(mockDataService, $scope) {\n        this.ctrl = this;\n        this.mockService = mockDataService;\n        this.$scope = $scope;\n    }\n    OrderServiceController.prototype.$onInit = function () {\n        this.ctrl.serviceIcon = this.ctrl.service.icon;\n        this.ctrl.serviceName = this.ctrl.service.name;\n        var details = this.mockService.getServiceDetails(this.ctrl.service.id);\n        this.ctrl.versions = details.versions;\n        this.ctrl.selectedVersion = details.versions[0];\n        this.ctrl.descTitle = details.descTitle;\n        this.ctrl.description = details.description;\n        // let prices = this.mockService.getServicePrices(this.ctrl.service.id);\n        this.ctrl.steps = [{ id: 1, selected: true },\n            { id: 2 },\n            { id: 3 }\n        ];\n        this.ctrl.currentStep = this.ctrl.steps[0];\n        this.ctrl.wizardReady = true;\n    };\n    OrderServiceController.prototype.getSteps = function () {\n        return this.ctrl.steps;\n    };\n    OrderServiceController.prototype.stepClick = function (step) {\n        if (step.visited) {\n            this.gotoStep(step);\n        }\n    };\n    OrderServiceController.prototype.gotoStep = function (step) {\n        this.ctrl.steps.forEach(function (step) { return step.selected = false; });\n        this.ctrl.currentStep.visited = true;\n        this.ctrl.currentStep = step;\n        this.ctrl.currentStep.selected = true;\n    };\n    OrderServiceController.prototype.configureService = function (serviceLongDescription) {\n        this.ctrl.serviceLongDescription = serviceLongDescription;\n        this.gotoStep(this.ctrl.steps[1]);\n    };\n    OrderServiceController.prototype.orderService = function () {\n        this.gotoStep(this.ctrl.steps[2]);\n    };\n    OrderServiceController.prototype.toggleAdvOps = function () {\n        var advHref = document.querySelector('#adv-ops-href');\n        var advOps = document.querySelector('#adv-ops');\n        angular.element(advHref).toggleClass('collapsed');\n        angular.element(advOps).toggleClass('collapse');\n    };\n    OrderServiceController.prototype.$onChanges = function (onChangesObj) {\n        // console.log('$onChanges' + JSON.stringify(onChangesObj));\n    };\n    OrderServiceController.prototype.$doCheck = function () {\n        // console.log('$doCheck');\n    };\n    OrderServiceController.prototype.cancelOrder = function () {\n        this.$scope.$emit('cancelOrder');\n    };\n    return OrderServiceController;\n}());\nOrderServiceController.$inject = ['MockDataService', '$scope'];\nexports.OrderServiceController = OrderServiceController;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/order-service/order-service.controller.ts","import * as angular from 'angular';\n\nexport class OrderServiceController implements angular.IController {\n\n  static $inject = ['MockDataService', '$scope'];\n\n  public ctrl: any = this;\n  public mockService: any;\n  public $scope: any;\n\n  constructor(mockDataService: any, $scope: any) {\n    this.mockService = mockDataService;\n    this.$scope = $scope;\n  }\n\n  public $onInit() {\n    this.ctrl.serviceIcon = this.ctrl.service.icon;\n    this.ctrl.serviceName = this.ctrl.service.name;\n\n    let details = this.mockService.getServiceDetails(this.ctrl.service.id);\n    this.ctrl.versions = details.versions;\n    this.ctrl.selectedVersion = details.versions[0];\n    this.ctrl.descTitle = details.descTitle;\n    this.ctrl.description = details.description;\n\n    // let prices = this.mockService.getServicePrices(this.ctrl.service.id);\n\n    this.ctrl.steps = [ {id: 1, selected: true},\n                        {id: 2},\n                        {id: 3}\n                      ];\n    this.ctrl.currentStep = this.ctrl.steps[0];\n\n    this.ctrl.wizardReady = true;\n  }\n\n  public getSteps() {\n    return this.ctrl.steps;\n  }\n\n  public stepClick(step: any) {\n    if (step.visited) {\n      this.gotoStep(step);\n    }\n  }\n\n  public gotoStep(step: any) {\n    this.ctrl.steps.forEach((step) => step.selected = false);\n    this.ctrl.currentStep.visited = true;\n    this.ctrl.currentStep = step;\n    this.ctrl.currentStep.selected = true;\n  }\n\n  public configureService (serviceLongDescription: string) {\n    this.ctrl.serviceLongDescription = serviceLongDescription;\n    this.gotoStep(this.ctrl.steps[1]);\n  }\n\n  public orderService() {\n    this.gotoStep(this.ctrl.steps[2]);\n  }\n\n  public toggleAdvOps() {\n    let advHref = document.querySelector('#adv-ops-href');\n    let advOps = document.querySelector('#adv-ops');\n    angular.element( advHref ).toggleClass('collapsed');\n    angular.element( advOps ).toggleClass('collapse');\n  }\n\n  public $onChanges(onChangesObj: angular.IOnChangesObject) {\n    // console.log('$onChanges' + JSON.stringify(onChangesObj));\n  }\n\n  public $doCheck() {\n    // console.log('$doCheck');\n  }\n\n  public cancelOrder() {\n    this.$scope.$emit('cancelOrder');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/components/order-service/order-service.controller.ts","\"use strict\";\nexports.__esModule = true;\nvar ServicesViewController = (function () {\n    function ServicesViewController($filter, $scope) {\n        this.ctrl = this;\n        this.cardViewConfig = {\n            selectItems: false,\n            showSelectBox: false,\n            onClick: this.handleClick\n        };\n        this.$filter = $filter;\n        this.$scope = $scope;\n    }\n    ServicesViewController.prototype.$onInit = function () {\n        var _this = this;\n        this.ctrl.origServices = this.ctrl.services.map(function (a) { return Object.assign({}, a, { ctrl: _this }); }); // clone\n        this.ctrl.currentFilter = 'all';\n        this.ctrl.currentSubFilter = 'all';\n        this.ctrl.filteredServices = this.ctrl.origServices;\n        this.ctrl.categories = this.ctrl.categories;\n        this.ctrl.subCategories = this.getSubCategories('all');\n        this.ctrl.orderingPanelvisible = false;\n        this.$scope.$on('cancelOrder', function () {\n            _this.ctrl.closeOrderingPanel();\n        });\n    };\n    ServicesViewController.prototype.filterByCategory = function (category, subCategory, updateSubCategories) {\n        if (category === 'all' && subCategory === 'all') {\n            this.ctrl.filteredServices = this.ctrl.origServices;\n        }\n        else if (category !== 'all' && subCategory === 'all') {\n            this.ctrl.filteredServices = this.$filter('filter')(this.ctrl.origServices, { category: category }, true);\n        }\n        else if (category === 'all' && subCategory !== 'all') {\n            this.ctrl.filteredServices = this.$filter('filter')(this.ctrl.origServices, { subCategory: subCategory }, true);\n        }\n        else {\n            this.ctrl.filteredServices = this.$filter('filter')(this.ctrl.origServices, { category: category, subCategory: subCategory }, true);\n        }\n        if (updateSubCategories) {\n            this.ctrl.subCategories = this.getSubCategories(category);\n        }\n        this.ctrl.currentFilter = category;\n        this.ctrl.currentSubFilter = (subCategory !== undefined) ? subCategory : 'all';\n    };\n    ServicesViewController.prototype.getSubCategories = function (category) {\n        var subCats = [];\n        this.ctrl.categories.map(function (categoryObj) {\n            if (category === 'all' || category === categoryObj.id) {\n                subCats = subCats.concat(categoryObj.subCategories);\n            }\n        });\n        return subCats;\n    };\n    ;\n    ServicesViewController.prototype.handleClick = function (item, e) {\n        item.ctrl.serviceToOrder = item;\n        item.ctrl.openOrderingPanel();\n    };\n    ;\n    ServicesViewController.prototype.openOrderingPanel = function () {\n        this.ctrl.orderingPanelvisible = true;\n    };\n    ;\n    ServicesViewController.prototype.closeOrderingPanel = function () {\n        this.ctrl.orderingPanelvisible = false;\n    };\n    ;\n    ServicesViewController.prototype.$onChanges = function (onChangesObj) {\n        // console.log('$onChanges' + JSON.stringify(onChangesObj));\n    };\n    ServicesViewController.prototype.$doCheck = function () {\n        // console.log('$doCheck');\n    };\n    return ServicesViewController;\n}());\nServicesViewController.$inject = ['$filter', '$scope'];\nexports.ServicesViewController = ServicesViewController;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/services-view/services-view.controller.ts","import * as angular from 'angular';\n\nexport class ServicesViewController implements angular.IController {\n  static $inject = ['$filter', '$scope'];\n\n  public ctrl: any = this;\n  public cardViewConfig: any;\n  private $filter: any;\n  private $scope: any;\n\n  constructor($filter: any, $scope: any) {\n    this.cardViewConfig = {\n      selectItems: false,\n      showSelectBox: false,\n      onClick: this.handleClick\n    };\n    this.$filter = $filter;\n    this.$scope = $scope;\n  }\n\n  public $onInit() {\n    this.ctrl.origServices = this.ctrl.services.map(a => Object.assign({}, a, {ctrl: this}));  // clone\n    this.ctrl.currentFilter = 'all';\n    this.ctrl.currentSubFilter = 'all';\n    this.ctrl.filteredServices = this.ctrl.origServices;\n    this.ctrl.categories = this.ctrl.categories;\n    this.ctrl.subCategories = this.getSubCategories('all');\n    this.ctrl.orderingPanelvisible = false;\n\n    this.$scope.$on('cancelOrder', () => {\n      this.ctrl.closeOrderingPanel();\n    });\n  }\n\n  public filterByCategory(category: string, subCategory: string, updateSubCategories: boolean) {\n    if (category === 'all' && subCategory === 'all') {\n      this.ctrl.filteredServices = this.ctrl.origServices;\n    } else if (category !== 'all' && subCategory === 'all') {\n        this.ctrl.filteredServices = this.$filter('filter')(this.ctrl.origServices, {category: category}, true);\n    } else if (category === 'all' && subCategory !== 'all') {\n        this.ctrl.filteredServices = this.$filter('filter')(this.ctrl.origServices, {subCategory: subCategory}, true);\n    } else {\n        this.ctrl.filteredServices = this.$filter('filter')(this.ctrl.origServices, {category: category, subCategory: subCategory}, true);\n    }\n    if (updateSubCategories) {\n      this.ctrl.subCategories = this.getSubCategories(category);\n    }\n    this.ctrl.currentFilter = category;\n    this.ctrl.currentSubFilter = (subCategory !== undefined) ? subCategory : 'all';\n  }\n\n  public getSubCategories(category: string) {\n    let subCats = [];\n    this.ctrl.categories.map(categoryObj => {\n      if (category === 'all' || category === categoryObj.id) {\n        subCats = subCats.concat(categoryObj.subCategories);\n      }\n    });\n    return subCats;\n  };\n\n  public handleClick(item: any, e: any) {\n    item.ctrl.serviceToOrder = item;\n    item.ctrl.openOrderingPanel();\n  };\n\n  public openOrderingPanel() {\n    this.ctrl.orderingPanelvisible = true;\n  };\n\n  public closeOrderingPanel() {\n    this.ctrl.orderingPanelvisible = false;\n  };\n\n  public $onChanges(onChangesObj: angular.IOnChangesObject) {\n    // console.log('$onChanges' + JSON.stringify(onChangesObj));\n  }\n\n  public $doCheck() {\n    // console.log('$doCheck');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/components/services-view/services-view.controller.ts","\"use strict\";\nexports.__esModule = true;\nvar angular = require(\"angular\");\nvar services_view_component_1 = require(\"./components/services-view/services-view.component\");\nvar order_service_component_1 = require(\"./components/order-service/order-service.component\");\nrequire(\"./styles/main.less\");\nexports.webCatalog = 'webCatalog';\nangular\n    .module(exports.webCatalog, ['patternfly', 'ngAnimate', 'ui.bootstrap'])\n    .component('servicesView', services_view_component_1.servicesView)\n    .component('orderService', order_service_component_1.orderService);\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","import * as angular from 'angular';\nimport {servicesView} from './components/services-view/services-view.component';\nimport {orderService} from './components/order-service/order-service.component';\nimport './styles/main.less';\n\nexport const webCatalog: string = 'webCatalog';\n\nangular\n    .module(webCatalog, ['patternfly', 'ngAnimate', 'ui.bootstrap'])\n    .component('servicesView', servicesView)\n    .component('orderService', orderService);\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/index.ts","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/styles/main.less\n// module id = 8\n// module chunks = 0","\"use strict\";\nexports.__esModule = true;\nvar order_service_controller_1 = require(\"./order-service.controller\");\nexports.orderService = {\n    bindings: {\n        service: '<'\n    },\n    controller: order_service_controller_1.OrderServiceController,\n    template: require('./order-service.html')\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/order-service/order-service.component.ts","import {OrderServiceController} from './order-service.controller';\n\nexport const orderService: angular.IComponentOptions = {\n  bindings: {\n    service: '<'\n  },\n  controller: OrderServiceController,\n  template: require('./order-service.html')\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/components/order-service/order-service.component.ts"],"sourceRoot":""}